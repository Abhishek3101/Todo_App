{"version":3,"sources":["firebase_config.js","Todo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","TodoListItem","todo","inprogress","id","style","display","ListItem","ListItemText","primary","secondary","Button","onClick","collection","doc","update","delete","App","useState","todos","setTodos","todoInput","setTodoInput","dispname","setdispname","email","setemail","status","setstatus","getTodos","onSnapshot","querySnapshot","docs","map","data","useEffect","className","flexDirection","justifyContent","alignItems","width","provider","GoogleAuthProvider","auth","getAuth","signInWithPopup","then","result","user","name","displayName","useremail","console","log","catch","error","signOut","TextField","label","value","maxWidth","onChange","e","target","type","variant","preventDefault","add","timestamp","FieldValue","serverTimestamp","marginTop","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAcAA,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,cACnBC,MAAO,6CAKT,IAAMC,EAAKR,IAASS,Y,0BCZL,SAASC,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GAWvD,OACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAASP,EACTQ,UAAWP,EAAa,cAAgB,gBAI5C,cAACQ,EAAA,EAAD,CAAQC,QAnBZ,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIW,OAAO,CACpCZ,YAAaA,KAiBb,SACGA,EAAa,OAAS,WAEzB,cAACQ,EAAA,EAAD,CAAQC,QAhBZ,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIY,UAe7B,kB,YC+GSC,MA9Hf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,SAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA4BR,oBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KAOA,SAASC,IACP9B,EAAGc,WAAW,SAASiB,YAAW,SAAUC,GAC1CX,EACEW,EAAcC,KAAKC,KAAI,SAACnB,GAAD,MAAU,CAC/BV,GAAIU,EAAIV,GACRF,KAAMY,EAAIoB,OAAOhC,KACjBC,WAAYW,EAAIoB,OAAO/B,WACvBsB,MAAOX,EAAIoB,OAAOT,cA6D1B,OAxEAU,qBAAU,WACRN,MACC,EAAU,IAATF,IAuEF,qBAAKS,UAAU,MAAf,SACE,sBACE/B,MAAO,CACLC,QAAS,OACT+B,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,MAAO,QANX,UASE,+BAAKjB,EAAL,WACA,cAACZ,EAAA,EAAD,CAAQC,QArDd,WACE,IAAM6B,EAAW,IAAIC,IACfC,EAAOC,cACbC,YAAgBF,EAAMF,GACnBK,MAAK,SAACC,GAKL,IAAMC,EAAOD,EAAOC,KAEhBC,EAAOD,EAAKE,YACZC,EAAYH,EAAKvB,MACrBD,EAAYyB,GACZvB,EAASyB,GACTvB,GAAU,GACVwB,QAAQC,IAAI,oBACZxB,IACAuB,QAAQC,IAAIlC,MAGbmC,OAAM,SAACC,GACNH,QAAQC,IAAIE,OA+BZ,4BACA,cAAC5C,EAAA,EAAD,CAAQC,QA5Bd,WACE,IAAM+B,EAAOC,cACbY,YAAQb,GACLG,MAAK,WACJM,QAAQC,IAAI,cACZ7B,EAAY,SACZE,EAAS,IACTE,GAAU,GACVwB,QAAQC,IAAIlC,MAEbmC,OAAM,SAACC,QAkBN,sBACA,iCACE,cAACE,EAAA,EAAD,CACErD,GAAG,iBACHsD,MAAM,eACNC,MAAOtC,EACPhB,MAAO,CAAEmC,MAAO,OAAQoB,SAAU,SAClCC,SAAU,SAACC,GAAD,OAAOxC,EAAawC,EAAEC,OAAOJ,UAEzC,cAAChD,EAAA,EAAD,CACEqD,KAAK,SACLC,QAAQ,YACRrD,QA/EV,SAAiBkD,GACfA,EAAEI,iBAEFnE,EAAGc,WAAW,SAASsD,IAAI,CACzBhE,YAAY,EACZiE,UAAW7E,IAASS,UAAUqE,WAAWC,kBACzCpE,KAAMmB,EACNI,MAAOA,IAGTH,EAAa,KAsELjB,MAAO,CAAEC,QAAS,QAJpB,wBASDqB,EACD,qBAAKtB,MAAO,CAAEmC,MAAO,OAAQoB,SAAU,QAASW,UAAW,QAA3D,SACGpD,EAAMqD,QAAO,SAACtE,GAAQ,OAAOA,EAAKuB,QAAUA,KAAQQ,KAAI,SAAC/B,GAAD,OACvD,cAACD,EAAD,CACEC,KAAMA,EAAKA,KACXC,WAAYD,EAAKC,WACjBC,GAAIF,EAAKE,UAGR,mDC/HfqE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf228db9.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\"\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAFFSyz-qBllBjBu3WmA6LVBMLvynq60xg\",\n  authDomain: \"todo-fee4d.firebaseapp.com\",\n  projectId: \"todo-fee4d\",\n  storageBucket: \"todo-fee4d.appspot.com\",\n  messagingSenderId: \"15857449880\",\n  appId: \"1:15857449880:web:361274de2ab4651aaf89ed\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport { db };\n","import React from \"react\";\nimport { ListItem, ListItemText, Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\n\nexport default function TodoListItem({ todo, inprogress, id }) {\n  function toggleInProgress() {\n    db.collection(\"todos\").doc(id).update({\n      inprogress: !inprogress,\n    });\n  }\n\n  function deleteTodo() {\n    db.collection(\"todos\").doc(id).delete();\n  }\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ListItem>\n        <ListItemText\n          primary={todo}\n          secondary={inprogress ? \"In Progress\" : \"Completed\"}\n        />\n      </ListItem>\n\n      <Button onClick={toggleInProgress}>\n        {inprogress ? \"Done\" : \"UnDone\"}\n      </Button>\n      <Button onClick={deleteTodo}>X</Button>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase/compat/app\"\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\nimport TodoListItem from \"./Todo\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { signOut } from \"firebase/auth\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [dispname, setdispname] = useState(\"Hello\");\n  const [email, setemail] = useState(\"\");\n  const [status, setstatus] = useState(false);\n\n\n  useEffect(() => {\n    getTodos();\n  }, [status===true]); // blank to run only on first launch\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          inprogress: doc.data().inprogress,\n          email: doc.data().email\n        }))\n      );\n    });\n  }\n\n\n  function addTodo(e) {\n    e.preventDefault();\n\n    db.collection(\"todos\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      todo: todoInput,\n      email: email\n    });\n\n    setTodoInput(\"\");\n  }\n\n  function signin() {\n    const provider = new GoogleAuthProvider();\n    const auth = getAuth();\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\n        // const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        // console.log(user)\n        var name = user.displayName;\n        var useremail = user.email;\n        setdispname(name);\n        setemail(useremail);\n        setstatus(true);\n        console.log(\"I have logged in\")\n        getTodos();\n        console.log(todos);\n        // ...\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function signout() {\n    const auth = getAuth();\n    signOut(auth)\n      .then(() => {\n        console.log(\"Signed Out\")\n        setdispname(\"Hello\")\n        setemail(\"\");\n        setstatus(false);\n        console.log(todos);\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <h1>{dispname} Todo</h1>\n        <Button onClick={signin}>Google Sign-in</Button>\n        <Button onClick={signout}>Sign-out</Button>\n        <form>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Write a Todo\"\n            value={todoInput}\n            style={{ width: \"90vw\", maxWidth: \"500px\" }}\n            onChange={(e) => setTodoInput(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={addTodo}\n            style={{ display: \"none\" }}\n          >\n            Default\n          </Button>\n        </form>\n        {status?\n        <div style={{ width: \"90vw\", maxWidth: \"500px\", marginTop: \"24px\" }}>\n          {todos.filter((todo)=>{return todo.email === email}).map((todo) => (\n            <TodoListItem\n              todo={todo.todo}\n              inprogress={todo.inprogress}\n              id={todo.id}\n            />\n          ))}\n        </div>:<p>login please</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}